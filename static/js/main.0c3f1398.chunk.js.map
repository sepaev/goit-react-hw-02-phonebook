{"version":3,"sources":["components/Form/Form.module.css","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Section/Section.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SectionStyle","styled","section","TitleH1","h1","PhonebookForm","form","FormLabel","label","FormButton","input","button","Form","onSubmit","this","props","className","css","inputNumber","type","name","pattern","placeholder","maxLength","title","required","mask","Component","TextH2","h2","Notification","ContactsList","ul","SearchInput","ContactsItem","li","NumberSpan","span","DeleteButton","Contacts","renderName","deleteFunc","id","number","onClick","contacts","result","contact","push","searchFunc","countContacts","onInput","renderAllContacts","Section","render","component","Notify","init","position","App","state","uuidv4","filter","doAddContact","success","setState","doDeleteContact","reportName","newArr","forEach","length","failure","e","preventDefault","inputName","target","children","value","trim","checkNumber","checkName","warning","makeSearch","searchQuery","toLocaleLowerCase","doClearNumber","split","join","getContacts","parseSearchQuery","toString","searchQueryText","searchQueryNumber","filtredArray","includes","namesArray","toLowerCase","concat","clearNumber","clearName","doClearName","match","queries","query","ids","checked","indexOf","checkForDoubleID","getFormComponent","getContactsComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c3f1398.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNumber\":\"Form_inputNumber__2Loro\"};","import styled from '@emotion/styled';\r\n\r\nexport const SectionStyle = styled.section`\r\n  text-align: left;\r\n  max-width: 450px;\r\n  width: 100%;\r\n  margin: auto;\r\n  border: solid 1px black;\r\n  background-color: white;\r\n  filter: drop-shadow(2px 4px 6px black);\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  margin: 50px auto;\r\n`;\r\n\r\nexport const TitleH1 = styled.h1`\r\n  font-size: 28px;\r\n  margin: 0 0 20px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const PhonebookForm = styled.form`\r\n  display: block;\r\n  border: solid 1px black;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  display: block;\r\n  font-size: 26px;\r\n  margin-bottom: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  display: block;\r\n  margin-bottom: 20px;\r\n  font-size: 22px;\r\n  outline: unset;\r\n  &:focus,\r\n  &:hover {\r\n    filter: drop-shadow(0px 0px 5px lightblue);\r\n    border: 1px solid lightblue;\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  display: block;\r\n  font-size: 22px;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { FormButton, FormLabel, PhonebookForm } from './Form.styled';\r\nimport PropTypes from 'prop-types';\r\nimport InputMask from 'react-input-mask';\r\nimport css from './Form.module.css';\r\n\r\nexport class Form extends Component {\r\n  render() {\r\n    const { onSubmit } = this.props;\r\n    return (\r\n      <PhonebookForm onSubmit={onSubmit}>\r\n        <FormLabel>\r\n          <span>Name</span>\r\n          <InputMask\r\n            key='nameKey'\r\n            className={css.inputNumber}\r\n            type='text'\r\n            name='name'\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            placeholder='Arnold Schwarzenegger'\r\n            maxLength='20'\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <span>Number</span>\r\n          <InputMask\r\n            key='numberKey'\r\n            className={css.inputNumber}\r\n            type='tel'\r\n            name='number'\r\n            pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n            placeholder='+38 (099) 999-99-99'\r\n            mask='+38 (099) 999-99-99'\r\n            title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n            required\r\n          />\r\n        </FormLabel>\r\n        <FormButton type='submit'>Add contact</FormButton>\r\n      </PhonebookForm>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const TextH2 = styled.h2`\r\n  font-weight: 400;\r\n  color: teal;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { TextH2 } from './Notification.styled';\r\n\r\nexport const Notification = props => {\r\n  const { title } = props;\r\n  return (\r\n    <div>\r\n      <TextH2>{title}</TextH2>\r\n    </div>\r\n  );\r\n};\r\nNotification.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ContactsList = styled.ul`\r\n  display: block;\r\n  padding-left: 10px;\r\n`;\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  margin-bottom: 20px;\r\n  font-size: 22px;\r\n  outline: unset;\r\n  &:focus,\r\n  &:hover {\r\n    filter: drop-shadow(0px 0px 5px lightblue);\r\n    border: 1px solid lightblue;\r\n  }\r\n`;\r\n\r\nexport const ContactsItem = styled.li`\r\n  display: block;\r\n  font-family: monospace;\r\n  list-style-type: disc;\r\n  font-size: 18px;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nexport const NumberSpan = styled.span`\r\n  position: fixed;\r\n  right: 45px;\r\n  display: inline-flex;\r\n`;\r\nexport const DeleteButton = styled.button`\r\n  margin-left: 5px;\r\n  padding: 2px;\r\n  font-size: 10px;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n","import { Component, Fragment } from 'react';\r\nimport { Notification } from '../Notification/Notification';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ContactsItem,\r\n  ContactsList,\r\n  DeleteButton,\r\n  NumberSpan,\r\n  SearchInput,\r\n} from './Contacts.styled';\r\n\r\nexport class Contacts extends Component {\r\n  renderName = ({ id, name, number }, deleteFunc) => {\r\n    return (\r\n      <ContactsItem key={id}>\r\n        • {name}:{' '}\r\n        <NumberSpan>\r\n          {number}\r\n          <DeleteButton id={id} onClick={() => deleteFunc(id)}>\r\n            X\r\n          </DeleteButton>\r\n        </NumberSpan>\r\n      </ContactsItem>\r\n    );\r\n  };\r\n  renderAllContacts(contacts, deleteFunc) {\r\n    const result = [];\r\n    for (let contact of contacts) {\r\n      result.push(this.renderName(contact, deleteFunc));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    const { contacts, searchFunc, deleteFunc, title, countContacts } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <ContactsList>\r\n          <SearchInput\r\n            type='text'\r\n            name='search'\r\n            title='Введите имя или телефон'\r\n            placeholder='Search contact'\r\n            onInput={searchFunc}\r\n          />\r\n          {this.renderAllContacts(contacts, deleteFunc)}\r\n        </ContactsList>\r\n        {countContacts ? (\r\n          <Fragment /> //пустой фрагмент\r\n        ) : (\r\n          <Notification title={title}></Notification>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  searchFunc: PropTypes.func.isRequired,\r\n  deleteFunc: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  countContacts: PropTypes.number.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TitleH1, SectionStyle } from '../Form/Form.styled';\r\n\r\nexport class Section extends Component {\r\n  render = () => {\r\n    const { title, component } = this.props;\r\n    return (\r\n      <SectionStyle>\r\n        <TitleH1>{title}</TitleH1>\r\n        {component}\r\n      </SectionStyle>\r\n    );\r\n  };\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  component: PropTypes.object.isRequired,\r\n};\r\n","import { Component, Fragment } from 'react';\nimport { Form } from './components/Form/Form';\nimport { Contacts } from './components/Contacts/Contacts';\nimport { Section } from './components/Section/Section';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Notify } from 'notiflix';\nNotify.init({ position: 'center-top' });\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: uuidv4(), name: 'Rosie Simpson', number: '+38 (050) 459-12-56' },\n      { id: uuidv4(), name: 'Hermione Kline', number: '+38 (095) 443-89-12' },\n      { id: uuidv4(), name: 'Eden Clements', number: '+38 (073) 645-17-79' },\n      { id: uuidv4(), name: 'Annie Copeland', number: '+38 (068) 227-91-26' },\n      { id: uuidv4(), name: 'Bellie Cuper', number: '+38 (063) 207-00-99' },\n      { id: uuidv4(), name: 'Joan Stratfild', number: '+38 (099) 428-21-66' },\n    ],\n    filter: '',\n  };\n  doAddContact = (name, number) => {\n    Notify.success('Well Done! Added ' + name);\n    this.setState(({ contacts, filter }) => {\n      const newArr = [...contacts, { id: uuidv4(), name, number }];\n      return { contacts: newArr, filter };\n    });\n  };\n\n  doDeleteContact = id => {\n    const { contacts, filter } = this.state;\n    const newArr = [];\n    let reportName;\n    if (!id) return;\n\n    contacts.forEach(contact => {\n      if (contact.id !== id) {\n        newArr.push(contact);\n      } else {\n        reportName = contact.name;\n      }\n    });\n\n    if (newArr.length === contacts.length) {\n      Notify.failure('Oh, no!');\n      return;\n    }\n\n    this.setState(() => {\n      return { contacts: newArr, filter };\n    });\n\n    Notify.success(`Contact ${reportName} was errased successfully`);\n  };\n\n  checkNumber(inputNumber) {\n    const clearNumber = this.doClearNumber(inputNumber);\n    let result = true;\n    if (inputNumber === '') result = false;\n    this.state.contacts.forEach(({ number }) => {\n      if (clearNumber === this.doClearNumber(number)) result = false;\n    });\n\n    return result;\n  }\n  checkName(inputName) {\n    let result = true;\n    const clearName = this.doClearName(inputName);\n    if (clearName === '') result = false;\n    this.state.contacts.forEach(({ name }) => {\n      if (clearName === this.doClearName(name)) result = false;\n    });\n    return result;\n  }\n  onSubmit = e => {\n    e.preventDefault();\n    const inputName = e.target.children[0].children[1].value.trim();\n    const inputNumber = e.target.children[1].children[1].value;\n    if (!this.checkNumber(inputNumber)) {\n      if (inputNumber) Notify.warning('Sorry. This NUMBER already exists.');\n      return;\n    }\n    if (!this.checkName(inputName)) {\n      // if (inputName) Notify.warning('Sorry. This NAME already exists.');\n      Notify.warning('Sorry. This NAME already exists.');\n      return;\n    }\n    this.doAddContact(inputName, inputNumber);\n  };\n\n  countContacts = (target = this.state.contacts) => {\n    return target.length;\n  };\n\n  makeSearch = e => {\n    const searchQuery = e.target.value.toLocaleLowerCase();\n\n    this.setState({ filter: searchQuery });\n  };\n\n  doClearNumber = number => {\n    const noSpace = number.split(' ').join('');\n    const noBracket = noSpace.split('(').join('').split(')').join('');\n    const noSign = noBracket.split('-').join('').split('+').join('');\n    return noSign;\n  };\n\n  doClearName(name) {\n    return name.split(' ').join('').toLowerCase().trim();\n  }\n\n  parseSearchQuery(searchQuery) {\n    let searchQueryText = '';\n    let searchQueryNumber = '';\n    if (searchQuery) {\n      if (searchQuery.match(/\\d+/)) {\n        searchQueryNumber = searchQuery.match(/\\d+/).toString();\n        const queries = searchQuery.split(searchQueryNumber);\n        const query = queries[0] || queries[1];\n        searchQueryText = query ? query : '';\n      } else {\n        searchQueryText = searchQuery;\n      }\n    }\n    return { searchQueryText, searchQueryNumber };\n  }\n  getContacts = () => {\n    const { searchQueryText, searchQueryNumber } = this.parseSearchQuery(\n      this.state.filter.toString(),\n    );\n    if (searchQueryText.length > 0 || searchQueryNumber.length > 0) {\n      let filtredArray = [];\n      //поиск по номеру\n      if (searchQueryNumber.length > 0) {\n        filtredArray = this.state.contacts.filter(({ number }) => {\n          const clearNumberText = this.doClearNumber(number);\n          return clearNumberText.includes(searchQueryNumber);\n        });\n        //комбинированый поиск\n        if (searchQueryText.length > 0) {\n          const namesArray = this.state.contacts.filter(({ name }) =>\n            name.toLowerCase().includes(searchQueryText),\n          );\n          return filtredArray.length > 0 ? filtredArray.concat(namesArray) : namesArray;\n        }\n        return filtredArray;\n      } else {\n        //Поиск по имени\n        filtredArray = this.state.contacts.filter(({ name }) =>\n          name.toLowerCase().includes(searchQueryText),\n        );\n        return filtredArray;\n      }\n    }\n    return this.state.contacts;\n  };\n\n  checkForDoubleID(contacts) {\n    const ids = [];\n    const checked = [];\n    contacts.forEach(contact => {\n      if (ids.indexOf(contact.id) < 0) {\n        ids.push(contact.id);\n        checked.push(contact);\n      }\n    });\n    return checked;\n  }\n\n  getContactsComponent(contacts) {\n    return (\n      <Contacts\n        contacts={contacts}\n        searchFunc={this.makeSearch}\n        deleteFunc={this.doDeleteContact}\n        countContacts={this.countContacts(contacts)}\n        title={\n          this.countContacts() ? 'Sorrry, no contacts found.' : 'Sorrry, you have no contacts yet.'\n        }\n      />\n    );\n  }\n\n  getFormComponent() {\n    return <Form onSubmit={this.onSubmit} />;\n  }\n\n  render() {\n    const contacts = this.checkForDoubleID(this.getContacts());\n    return (\n      <Fragment>\n        <Section title='Phonebook' component={this.getFormComponent()} />\n        <hr />\n        <Section title='Contacts' component={this.getContactsComponent(contacts)} />\n      </Fragment>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}