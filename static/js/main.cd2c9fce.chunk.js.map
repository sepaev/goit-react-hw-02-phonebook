{"version":3,"sources":["components/Form/Form.module.css","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Section/Section.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SectionStyle","styled","section","TitleH1","h1","PhonebookForm","form","FormLabel","label","FormButton","input","button","Form","onSubmit","this","props","className","css","inputNumber","type","name","pattern","placeholder","maxLength","title","required","mask","Component","TextH2","h2","Notification","message","ContactsList","ul","SearchInput","ContactsItem","li","NumberSpan","span","DeleteButton","Contacts","contacts","searchFunc","deleteFunc","onInput","map","id","number","onClick","length","Notify","init","position","Section","e","preventDefault","inputName","target","children","value","trim","checkNumber","checkName","doAddContact","warning","doClearNumber","split","join","getContacts","data","filter","parseSearchQuery","toString","searchQueryText","searchQueryNumber","filtredArray","includes","namesArray","toLowerCase","concat","render","component","checkForDoubleID","clearNumber","result","forEach","clearName","doClearName","ids","checked","contact","indexOf","push","searchQuery","match","queries","query","App","state","uuidv4","success","setState","makeSearch","toLocaleLowerCase","doDeleteContact","reportName","newArr","failure","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd2c9fce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNumber\":\"Form_inputNumber__2Loro\"};","import styled from '@emotion/styled';\r\n\r\nexport const SectionStyle = styled.section`\r\n  text-align: left;\r\n  max-width: 450px;\r\n  width: 100%;\r\n  margin: auto;\r\n  border: solid 1px black;\r\n  background-color: white;\r\n  filter: drop-shadow(2px 4px 6px black);\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  margin: 50px auto;\r\n`;\r\n\r\nexport const TitleH1 = styled.h1`\r\n  font-size: 28px;\r\n  margin: 0 0 20px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const PhonebookForm = styled.form`\r\n  display: block;\r\n  border: solid 1px black;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  display: block;\r\n  font-size: 26px;\r\n  margin-bottom: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  display: block;\r\n  margin-bottom: 20px;\r\n  font-size: 22px;\r\n  outline: unset;\r\n  &:focus,\r\n  &:hover {\r\n    filter: drop-shadow(0px 0px 5px lightblue);\r\n    border: 1px solid lightblue;\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  display: block;\r\n  font-size: 22px;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { FormButton, FormLabel, PhonebookForm } from './Form.styled';\r\nimport PropTypes from 'prop-types';\r\nimport InputMask from 'react-input-mask';\r\nimport css from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  render() {\r\n    const { onSubmit } = this.props;\r\n    return (\r\n      <PhonebookForm onSubmit={onSubmit}>\r\n        <FormLabel>\r\n          <span>Name</span>\r\n          <InputMask\r\n            key='nameKey'\r\n            className={css.inputNumber}\r\n            type='text'\r\n            name='name'\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            placeholder='Arnold Schwarzenegger'\r\n            maxLength='20'\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <span>Number</span>\r\n          <InputMask\r\n            key='numberKey'\r\n            className={css.inputNumber}\r\n            type='tel'\r\n            name='number'\r\n            pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n            placeholder='+38 (099) 999-99-99'\r\n            mask='+38 (099) 999-99-99'\r\n            title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n            required\r\n          />\r\n        </FormLabel>\r\n        <FormButton type='submit'>Add contact</FormButton>\r\n      </PhonebookForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const TextH2 = styled.h2`\r\n  font-weight: 400;\r\n  color: teal;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { TextH2 } from './Notification.styled';\r\n\r\nconst Notification = props => {\r\n  const { message } = props;\r\n  return (\r\n    <div>\r\n      <TextH2>{message}</TextH2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ContactsList = styled.ul`\r\n  display: block;\r\n  padding-left: 10px;\r\n`;\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  margin-bottom: 20px;\r\n  font-size: 22px;\r\n  outline: unset;\r\n  &:focus,\r\n  &:hover {\r\n    filter: drop-shadow(0px 0px 5px lightblue);\r\n    border: 1px solid lightblue;\r\n  }\r\n`;\r\n\r\nexport const ContactsItem = styled.li`\r\n  display: block;\r\n  font-family: monospace;\r\n  list-style-type: disc;\r\n  font-size: 18px;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nexport const NumberSpan = styled.span`\r\n  position: fixed;\r\n  right: 45px;\r\n  display: inline-flex;\r\n`;\r\nexport const DeleteButton = styled.button`\r\n  margin-left: 5px;\r\n  padding: 2px;\r\n  font-size: 10px;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n","import { Fragment } from 'react';\r\nimport Notification from '../Notification/Notification';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ContactsItem,\r\n  ContactsList,\r\n  DeleteButton,\r\n  NumberSpan,\r\n  SearchInput,\r\n} from './Contacts.styled';\r\n\r\nconst Contacts = ({ contacts, searchFunc, deleteFunc, message }) => {\r\n  return (\r\n    <Fragment>\r\n      <ContactsList>\r\n        <SearchInput\r\n          type='text'\r\n          name='search'\r\n          title='Введите имя или телефон'\r\n          placeholder='Search contact'\r\n          onInput={searchFunc}\r\n        />\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactsItem key={id}>\r\n            {'• ' + name + ': '}\r\n            <NumberSpan>\r\n              {number}\r\n              <DeleteButton id={id} onClick={() => deleteFunc(id)}>\r\n                X\r\n              </DeleteButton>\r\n            </NumberSpan>\r\n          </ContactsItem>\r\n        ))}\r\n      </ContactsList>\r\n      {!contacts.length && <Notification message={message}></Notification>}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Contacts;\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  searchFunc: PropTypes.func.isRequired,\r\n  deleteFunc: PropTypes.func.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from '../Form/Form';\r\nimport Contacts from '../Contacts/Contacts';\r\nimport { TitleH1, SectionStyle } from '../Form/Form.styled';\r\nimport { Notify } from 'notiflix';\r\nNotify.init({ position: 'center-top' });\r\n\r\nexport class Section extends Component {\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const inputName = e.target.children[0].children[1].value.trim();\r\n    const inputNumber = e.target.children[1].children[1].value;\r\n    if (!this.checkNumber(inputNumber)) {\r\n      if (inputNumber) Notify.warning('Sorry. This NUMBER already exists.');\r\n      return;\r\n    }\r\n    if (!this.checkName(inputName)) {\r\n      // if (inputName) Notify.warning('Sorry. This NAME already exists.');\r\n      Notify.warning('Sorry. This NAME already exists.');\r\n      return;\r\n    }\r\n    this.props.doAddContact(inputName, inputNumber);\r\n  };\r\n\r\n  doClearNumber = number => {\r\n    const noSpace = number.split(' ').join('');\r\n    const noBracket = noSpace.split('(').join('').split(')').join('');\r\n    const noSign = noBracket.split('-').join('').split('+').join('');\r\n    return noSign;\r\n  };\r\n\r\n  checkNumber(inputNumber) {\r\n    const clearNumber = this.doClearNumber(inputNumber);\r\n    let result = true;\r\n    if (inputNumber === '') result = false;\r\n    this.props.data.contacts.forEach(({ number }) => {\r\n      if (clearNumber === this.doClearNumber(number)) result = false;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  checkName(inputName) {\r\n    let result = true;\r\n    const clearName = this.doClearName(inputName);\r\n    if (clearName === '') result = false;\r\n    this.props.data.contacts.forEach(({ name }) => {\r\n      if (clearName === this.doClearName(name)) result = false;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  doClearName(name) {\r\n    return name.split(' ').join('').toLowerCase().trim();\r\n  }\r\n\r\n  checkForDoubleID(contacts) {\r\n    const ids = [];\r\n    const checked = [];\r\n    contacts.forEach(contact => {\r\n      if (ids.indexOf(contact.id) < 0) {\r\n        ids.push(contact.id);\r\n        checked.push(contact);\r\n      }\r\n    });\r\n    return checked;\r\n  }\r\n  getContacts = () => {\r\n    const { filter, contacts } = this.props.data;\r\n    const { searchQueryText, searchQueryNumber } = this.parseSearchQuery(filter.toString());\r\n    if (searchQueryText.length > 0 || searchQueryNumber.length > 0) {\r\n      let filtredArray = [];\r\n      //поиск по номеру\r\n      if (searchQueryNumber.length > 0) {\r\n        filtredArray = contacts.filter(({ number }) => {\r\n          const clearNumberText = this.doClearNumber(number);\r\n          return clearNumberText.includes(searchQueryNumber);\r\n        });\r\n        //комбинированый поиск\r\n        if (searchQueryText.length > 0) {\r\n          const namesArray = contacts.filter(({ name }) =>\r\n            name.toLowerCase().includes(searchQueryText),\r\n          );\r\n          return filtredArray.length > 0 ? filtredArray.concat(namesArray) : namesArray;\r\n        }\r\n        return filtredArray;\r\n      } else {\r\n        //Поиск по имени\r\n        filtredArray = contacts.filter(({ name }) => name.toLowerCase().includes(searchQueryText));\r\n        return filtredArray;\r\n      }\r\n    }\r\n    return contacts;\r\n  };\r\n\r\n  parseSearchQuery(searchQuery) {\r\n    let searchQueryText = '';\r\n    let searchQueryNumber = '';\r\n    if (searchQuery) {\r\n      if (searchQuery.match(/\\d+/)) {\r\n        searchQueryNumber = searchQuery.match(/\\d+/).toString();\r\n        const queries = searchQuery.split(searchQueryNumber);\r\n        const query = queries[0] || queries[1];\r\n        searchQueryText = query ? query : '';\r\n      } else {\r\n        searchQueryText = searchQuery;\r\n      }\r\n    }\r\n    return { searchQueryText, searchQueryNumber };\r\n  }\r\n  render = () => {\r\n    const { title, component, searchFunc, deleteFunc, data } = this.props;\r\n    const contacts = this.checkForDoubleID(this.getContacts());\r\n    return (\r\n      <SectionStyle>\r\n        <TitleH1>{title}</TitleH1>\r\n        {component === 'Form' && <Form onSubmit={this.onSubmit} />}\r\n        {component === 'Contacts' && (\r\n          <Contacts\r\n            contacts={contacts}\r\n            searchFunc={searchFunc}\r\n            deleteFunc={deleteFunc}\r\n            message={\r\n              data.length ? 'Sorrry, no contacts found.' : 'Sorrry, you have no contacts yet.'\r\n            }\r\n          />\r\n        )}\r\n      </SectionStyle>\r\n    );\r\n  };\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  component: PropTypes.string.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  doAddContact: PropTypes.func,\r\n  searchFunc: PropTypes.func,\r\n  deleteFunc: PropTypes.func,\r\n};\r\n","import { Component, Fragment } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Section } from './components/Section/Section';\n\nimport { Notify } from 'notiflix';\nNotify.init({ position: 'center-top' });\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: uuidv4(), name: 'Rosie Simpson', number: '+38 (050) 459-12-56' },\n      { id: uuidv4(), name: 'Hermione Kline', number: '+38 (095) 443-89-12' },\n      { id: uuidv4(), name: 'Eden Clements', number: '+38 (073) 645-17-79' },\n      { id: uuidv4(), name: 'Annie Copeland', number: '+38 (068) 227-91-26' },\n      { id: uuidv4(), name: 'Bellie Cuper', number: '+38 (063) 207-00-99' },\n      { id: uuidv4(), name: 'Joan Stratfild', number: '+38 (099) 428-21-66' },\n    ],\n    filter: '',\n  };\n  doAddContact = (name, number) => {\n    Notify.success('Well Done! Added ' + name);\n    this.setState(({ contacts, filter }) => {\n      const newArr = [...contacts, { id: uuidv4(), name, number }];\n      return { contacts: newArr, filter };\n    });\n  };\n\n  makeSearch = e => {\n    const searchQuery = e.target.value.toLocaleLowerCase();\n    this.setState({ filter: searchQuery });\n  };\n\n  doDeleteContact = id => {\n    const { contacts, filter } = this.state;\n    const newArr = [];\n    let reportName;\n    if (!id) return;\n\n    contacts.forEach(contact => {\n      if (contact.id !== id) {\n        newArr.push(contact);\n      } else {\n        reportName = contact.name;\n      }\n    });\n\n    if (newArr.length === contacts.length) {\n      Notify.failure('Oh, no!');\n      return;\n    }\n\n    this.setState(() => {\n      return { contacts: newArr, filter };\n    });\n\n    Notify.success(`Contact ${reportName} was errased successfully`);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Section\n          title='Phonebook'\n          component='Form'\n          data={this.state}\n          doAddContact={this.doAddContact}\n        />\n        <hr />\n        <Section\n          title='Contacts'\n          component='Contacts'\n          data={this.state}\n          searchFunc={this.makeSearch}\n          deleteFunc={this.doDeleteContact}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}